# trigger:
# - master
  
pr:
  branches:
    include:
      - dev

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build image
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: 'ubuntu-latest'

    steps:
    
    - task: Docker@2
      displayName: Build an image
      inputs:
        containerRegistry: 'docker-registry'
        repository: 'jkolonkova/azure-pipelines-ProductsStoreOnKubernetes'
        command: 'build'
        Dockerfile: 'MvcApp/Dockerfile'
        tags: '$(tag)'

    - task: Docker@2
      displayName: Push an image
      inputs:
        containerRegistry: 'docker-registry'
        repository: 'jkolonkova/azure-pipelines-ProductsStoreOnKubernetes'
        command: 'push'
        Dockerfile: '**/Dockerfile'
        tags: '$(tag)'
    - task: replacetokens@5
      inputs:
        rootDirectory: 'kubernetes'
        targetFiles: 'mvc-deployment.azure.yaml'
        encoding: 'auto'
        tokenPattern: 'default'
        writeBOM: true
        actionOnMissing: 'warn'
        keepToken: false
        actionOnNoFiles: 'continue'
        enableTransforms: false
        enableRecursion: false
        useLegacyPattern: false
        enableTelemetry: true
    - task: CopyFiles@2
      inputs:
        SourceFolder: 'kubernetes'
        Contents: |
          mssql-secret.yaml
          mssql-pv.azure.yaml
          mssql-deployment.yaml
          mssql-configmap.yaml
          mvc-deployment.azure.yaml
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)'
        artifact: 'k8s-manifests'
        publishLocation: 'pipeline'

# - stage: Deploy
#   displayName: Deploy Helm
#   jobs:  
#   - job: Deploy
#     displayName: Deploy
#     pool:
#       vmImage: 'ubuntu-latest'
      
#     steps:

#     - task: HelmInstaller@1
#       inputs:
#         helmVersionToInstall: '3.2.3'

#     - task: HelmDeploy@0
#       inputs:
#         connectionType: 'Azure Resource Manager'
#         azureSubscription: 'Visual Studio Enterprise(17b12858-3960-4e6f-a663-a06fdae23428)'
#         azureResourceGroup: 'aks-demo'
#         kubernetesCluster: 'aks-demo'
#         command: 'upgrade'
#         chartType: 'FilePath'
#         chartPath: 'charts/productsstore'
#         releaseName: 'productsstore'
#         arguments: '--set web.image.tag=$(tag) --set web.image.name=products-web --set namespace=helm-app'
